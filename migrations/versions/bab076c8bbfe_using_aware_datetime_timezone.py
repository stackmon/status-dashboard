"""using aware datetime(timezone)

Revision ID: bab076c8bbfe
Revises: 14621c95e3ee
Create Date: 2024-03-18 17:11:10.434492

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bab076c8bbfe'
down_revision = '14621c95e3ee'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('incident', schema=None) as batch_op:
        batch_op.alter_column('start_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
        batch_op.alter_column('end_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('incident_component_relation', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_incident_component', 'incident', ['incident_id'], ['id'])

    with op.batch_alter_table('incident_status', schema=None) as batch_op:
        batch_op.alter_column('timestamp',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
        batch_op.create_foreign_key('fk_incident_status', 'incident', ['incident_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('incident_status', schema=None) as batch_op:
        batch_op.drop_constraint('fk_incident_status', type_='foreignkey')
        batch_op.alter_column('timestamp',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)

    with op.batch_alter_table('incident_component_relation', schema=None) as batch_op:
        batch_op.drop_constraint('fk_incident_component', type_='foreignkey')

    with op.batch_alter_table('incident', schema=None) as batch_op:
        batch_op.alter_column('end_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('start_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)

    # ### end Alembic commands ###
