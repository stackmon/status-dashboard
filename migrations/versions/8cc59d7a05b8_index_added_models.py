"""index added (models)

Revision ID: 8cc59d7a05b8
Revises: 14621c95e3ee
Create Date: 2024-01-25 23:32:46.360628

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8cc59d7a05b8'
down_revision = '14621c95e3ee'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('incident', schema=None) as batch_op:
        batch_op.drop_index('ix_incident_id')

    op.drop_table('incident')
    with op.batch_alter_table('component_attribute', schema=None) as batch_op:
        batch_op.drop_index('ix_component_attribute_component_id')
        batch_op.drop_index('ix_component_attribute_id')

    op.drop_table('component_attribute')
    with op.batch_alter_table('incident_status', schema=None) as batch_op:
        batch_op.drop_index('ix_incident_status_id')
        batch_op.drop_index('ix_incident_status_incident_id')

    op.drop_table('incident_status')
    with op.batch_alter_table('component', schema=None) as batch_op:
        batch_op.drop_index('ix_component_id')

    op.drop_table('component')
    with op.batch_alter_table('incident_component_relation', schema=None) as batch_op:
        batch_op.drop_index('inc_comp_rel')

    op.drop_table('incident_component_relation')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('incident_component_relation',
    sa.Column('incident_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('component_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['component_id'], ['component.id'], name='incident_component_relation_component_id_fkey')
    )
    with op.batch_alter_table('incident_component_relation', schema=None) as batch_op:
        batch_op.create_index('inc_comp_rel', ['incident_id', 'component_id'], unique=True)

    op.create_table('component',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('component_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='component_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('component', schema=None) as batch_op:
        batch_op.create_index('ix_component_id', ['id'], unique=False)

    op.create_table('incident_status',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('incident_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='incident_status_pkey')
    )
    with op.batch_alter_table('incident_status', schema=None) as batch_op:
        batch_op.create_index('ix_incident_status_incident_id', ['incident_id'], unique=False)
        batch_op.create_index('ix_incident_status_id', ['id'], unique=False)

    op.create_table('component_attribute',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('component_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('value', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['component_id'], ['component.id'], name='component_attribute_component_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='component_attribute_pkey')
    )
    with op.batch_alter_table('component_attribute', schema=None) as batch_op:
        batch_op.create_index('ix_component_attribute_id', ['id'], unique=False)
        batch_op.create_index('ix_component_attribute_component_id', ['component_id'], unique=False)

    op.create_table('incident',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('impact', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('system', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='incident_pkey')
    )
    with op.batch_alter_table('incident', schema=None) as batch_op:
        batch_op.create_index('ix_incident_id', ['id'], unique=False)

    # ### end Alembic commands ###
